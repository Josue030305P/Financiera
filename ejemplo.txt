<?php
require_once '../config/Database.php';

class Lead {
    private $conexion;

    public function __construct() {
        $this->conexion = Database::getConexion();
    }

    // Obtiene todos los leads (suponiendo que tienes una vista 'lista_leads')
    public function getAll(): array {
        $result = [];
        try {
            $sql = "SELECT * FROM lista_leads ORDER BY idlead";
            $smt = $this->conexion->prepare($sql);
            $smt->execute();
            $result = $smt->fetchAll(PDO::FETCH_ASSOC);
        } catch(PDOException $e) {
            throw new Exception($e->getMessage());
        }
        return $result;
    }

    // Inserta un nuevo lead: se inserta primero en 'personas' y luego en 'leads'
    public function add($params = []): int {
        $rowsAffects = 0;
        try {
            // Inicia la transacción
            $this->conexion->beginTransaction();

            // Insertar en la tabla 'personas'
            $sqlPersonas = "
                INSERT INTO personas (
                    tipodocumento,
                    numdocumento,
                    idpais,
                    iddistrito,
                    apellidos,
                    nombres,
                    email,
                    telprincipal
                )
                VALUES (
                    'DNI',        -- Valor por defecto, ajusta según necesites
                    NULL,         -- numdocumento (NULL o recibe por parámetro)
                    :idpais,
                    :iddistrito,  -- Si no envías este dato, puedes usar un valor por defecto (por ejemplo, 1)
                    :apellidos,
                    :nombres,
                    :email,
                    :telprincipal
                )
            ";
            $smt = $this->conexion->prepare($sqlPersonas);
            $smt->execute([
                ':idpais'       => $params['idpais'],
                ':iddistrito'   => isset($params['iddistrito']) ? $params['iddistrito'] : 1,
                ':apellidos'    => $params['apellidos'],
                ':nombres'      => $params['nombres'],
                ':email'        => $params['email'],
                ':telprincipal' => $params['telprincipal']
            ]);
            
            // Obtener el ID de la persona insertada
            $new_idpersona = $this->conexion->lastInsertId();

            // Insertar en la tabla 'leads'
            $sqlLeads = "
                INSERT INTO leads (
                    idasesor,
                    idpersona,
                    idcanal,
                    comentarios,
                    prioridad,
                    ocupacion
                )
                VALUES (
                    :idasesor,
                    :idpersona,
                    :idcanal,
                    :comentarios,
                    :prioridad,
                    :ocupacion
                )
            ";
            $smt = $this->conexion->prepare($sqlLeads);
            $smt->execute([
                ':idasesor'    => isset($params['idasesor']) ? $params['idasesor'] : 1,
                ':idpersona'   => $new_idpersona,
                ':idcanal'     => isset($params['idcanal']) ? $params['idcanal'] : 1,
                ':comentarios' => $params['comentarios'],
                ':prioridad'   => $params['prioridad'],
                ':ocupacion'   => $params['ocupacion']
            ]);

            $rowsAffects = $smt->rowCount();
            // Confirmar la transacción
            $this->conexion->commit();
        } catch(PDOException $e) {
            // Revertir la transacción en caso de error
            $this->conexion->rollBack();
            throw new Exception($e->getMessage());
        }
        return $rowsAffects;
    }
}
?>
